Dear MySQL Users,

A new GA (general availability) version of MySQL Connector/C++ has been
made available: MySQL Connector/C++ 1.1.0 GA. The MySQL Connector/C++
provides a C++ API for connecting client applications to the
MySQL Server 5.1 or newer. You can download the production release at:

 http://dev.mysql.com/downloads/connector/cpp/1.0.html

LICENSE

MySQL Connector/C++ is licensed under the GPLv2 or a commercial
license from Oracle Corporation.

If you have licensed this product under the GPLv2, please see the
COPYING file for more information. 

There are special exceptions to the terms and conditions of the 
GPLv2 as it is applied to this software, see the FLOSS License
Exception 
<http://www.mysql.com/about/legal/licensing/foss-exception.html>.

For Licensing questions, and to purchase MySQL Products and Services,
please contact an Oracle sales representative:

  http://www.mysql.com/about/contact/sales.html?s=oem

====

The MySQL driver for C++ offers an easy to use API derived from JDBC
4.0. We use the MySQL Connector/C++ in two of our own products. A
development version of MySQL Workbench is using it successfully since
months. MySQL Connector/OpenOffice.org, an OpenOffice.org 3.1
extension, is a thin wrapper around the MySQL driver for C++.

The major feature addition in version 1.1.0 is run-time dynamic
loading of the MYSQL Client Library. You can choose to link the MySQL
Client Library (C-API) at compile time, which has been the default in
the past and is still the default in 1.1.0, or to use dynamic loading
at run-time. Run-time dynamic loading allows you to switch the client
library on a per connection basis and can be useful, if you need to
ensure that a certain version of the MySQL Client Library will be
used.

We have improved the driver and added a couple of new features since
the last beta release. Please see the documentation and the CHANGES
file in the source distribution for a detailed description of bugs
that have been fixed. Among others the following changes have been
made:

- Fixed bugs #45048, #45846, #45843, #44931, #36239

- Fixed bug in ResultSetMetaData for normal statements and prepared
  ones, getScale() and getPrecision() did return wrong results.

- Fixed performance issue of Prepared Statements when reading large
  result sets.

- API incompatible change: ConnectPropertyVal is no more a struct but
  a typedef that uses boost::variant.

- Connection::getClientOption() now supports "metadataUseInfoSchema",
  "defaultStatementResultType", "defaultPreparedStatementResultType"
  and "characterSetResults".

- We make use of some Boost components (http://www.boost.org). For
  compiling from source you need to have Boost 1.34.0 or newer
  installed. There are no new dependencies for binary builds.

You can find further details, including usages examples, in the
documentation at:

  http://dev.mysql.com/doc/refman/5.1/en/connector-cpp.html

The projects MySQL Forge wiki page is at:

  http://forge.mysql.com/wiki/Connector_C%2B%2B

Feedback, bug reports, bug fixes, patches and so on are welcome and
appreciated:

    http://forge.mysql.com/wiki/Contributing

You may also want to contribute to the MySQL Forum on C/C++ at
http://forums.mysql.com/list.php?167 or join the MySQL Connector/C++
mailing list http://lists.mysql.com/connector-cplusplus .

Enjoy!
